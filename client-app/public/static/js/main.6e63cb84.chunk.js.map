{"version":3,"sources":["components/training-in-process/approaches-list-item/index.js","components/training-in-process/approaches-list-item/approaches-list-item.js","components/training-in-process/approaches-list/approaches-list.js","components/training-in-process/approaches-list/index.js","components/statistics/training-view/training-view.js","components/statistics/training-view/index.js","components/training-completed/training-completed-list-item/index.js","components/training-completed/training-completed-list-item/training-completed-list-item.js","components/training-completed/training-completed-list/training-completed-list.js","components/training-completed/training-completed-list/index.js","actions/completed-trainings.js","containers/trainings-completed/trainings-completed-container.js","containers/trainings-completed/index.js","components/legacy/layout/material/sing-in/index.js","components/training-in-process/add-approach/add-approach.js","components/training-in-process/add-approach/index.js","components/training-in-process/exercises-list-item/exercises-list-item.js","components/training-in-process/exercises-list-item/index.js","components/training-in-process/exercises-list/index.js","components/training-in-process/exercises-list/exercises-list.js","actions/training-in-process.js","containers/training-in-process/training-in-process-container.js","containers/training-in-process/index.js","App.js","theme.js","actions/exercises.js","reducers/exercises-reducer.js","actions/trainings.js","reducers/trainings-reducer.js","reducers/completed-training-reducer.js","reducers/training-in-process-reducer.js","reducers/index.js","epics/exercisesEpics.js","epics/trainingsEpics.js","epics/index.js","epics/completedTrainingEpics.js","store.js","index.js"],"names":["ApproachesListItem","_ref","approach","react_default","a","createElement","Fragment","ListItem","ListItemAvatar","Avatar","number","ListItemText","primary","weight","repetition","secondary","relaxation","Divider","variant","component","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","ApproachesList","approaches","classes","List","className","map","training_in_process_approaches_list_item","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","text","marginBottom","marginTop","TrainingView","panel","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","Grid","item","xs","sm","md","lg","xl","Typography","gutterBottom","data","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","ExpansionPanelDetails","TrainingCompletedListItem","elements","completedTrainings","_ref2","dateTime","date","moment","format","button","ListItemIcon","TrainingCompletedList","aria-labelledby","subheader","ListSubheader","training_completed_list_item","SAVE_COMPLETED_TRAINING","SAVE_COMPLETED_TRAINING_SUCCESS","SAVE_COMPLETED_TRAINING_FAILURE","FETCH__COMPLETED_TRAININGS","COMPLETED_TRAININGS_SUCCESS","COMPLETED_TRAININGS_FAILURE","TrainingsCompletedContainer","fetchCompletedTrainings","this","props","training_completed_list","Component","connect","state","dispatch","type","@global","body","common","white","spacing","display","flexDirection","alignItems","avatar","margin","main","form","submit","flexWrap","withoutLabel","textField","btnApproach","AddApproach","addApproach","exerciseId","open","setOpen","handleClose","handleInputChange","e","_e$target","target","name","value","setValues","objectSpread","values","defineProperty","_useState","_useState2","Button","fullWidth","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","label","clsx","InputProps","endAdornment","InputAdornment","position","DialogActions","console","log","save","card","media","height","paddingTop","actions","flexGrow","padding","textAlign","ExercisesListItem","exercise","editExercise","title","autoComplete","training_in_process_add_approach","training_in_process_approaches_list","ExercisesList","exercises","addExercise","saveTraining","training_in_process_exercises_list_item","ADD_EXERCISE","ADD_APPROACH","EDIT_EXERCISE","FINISH_TRAINING","TrainingInProcessContainer","_this$props","training_in_process_exercises_list","trainingInProcess","payload","saveCompletedTraining","createMuiTheme","error","red","A400","default","FETCH_EXERCISES","FETCH_EXERCISES_SUCCESS","FETCH_EXERCISES_FAILURE","fetchExercisesSuccess","initialState","loading","exercisesReducer","arguments","length","undefined","action","message","FETCH_TRAININGS","FETCH_TRAININGS_SUCCESS","FETCH_TRAININGS_FAILURE","TRAINING_CREATE","TRAINING_CREATE_SUCCESS","fetchTrainingsSuccess","trainings","trainingsReducer","concat","toConsumableArray","completedTrainingReducer","training","trainingInProcessReducer","find","x","slice","reducer","combineReducers","API","rootEpic","combineEpics","action$","pipe","ofType","switchMap","ajax","getJSON","post","Content-Type","resp","response","userId","Date","of","configureStore","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","es","ThemeProvider","CssBaseline","react_router_dom","container","justify","react_router","exact","path","TestLayout","document","querySelector"],"mappings":"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","file":"static/js/main.6e63cb84.chunk.js","sourcesContent":["import ApproachesListItem from \"./approaches-list-item\";\r\n\r\nexport default ApproachesListItem;\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst ApproachesListItem = ({approach}) => {\r\n  return (\r\n    <>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            {approach.number}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={approach.weight + \" кг\"}/>\r\n        <ListItemText primary={approach.repetition} secondary=\"Повторений\" />\r\n        <ListItemText primary={approach.relaxation + \" сек\"} secondary=\"Отдых\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ApproachesListItem;\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ApproachesListItem from \"../approaches-list-item\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst ApproachesList = ({approaches}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {approaches.map((approach) => {\r\n        return (\r\n          <ApproachesListItem approach={approach}/>\r\n        )\r\n      })}\r\n    </List>\r\n  )\r\n};\r\n\r\nexport default ApproachesList;\r\n","import ApproachesList from \"./approaches-list\";\r\n\r\nexport default ApproachesList;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ApproachesList from '../../training-in-process/approaches-list';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  text: {\r\n    marginBottom: 20,\r\n    marginTop: 20,\r\n  }\r\n}));\r\n\r\nexport default function ControlledExpansionPanels() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n      <div className={classes.root}>\r\n        <Typography className={classes.text} variant=\"h4\" gutterBottom>\r\n          Название тренировки\r\n        </Typography>\r\n        <Typography className={classes.data} gutterBottom>\r\n          29.08\r\n        </Typography>\r\n        <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n          <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon/>}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Typography className={classes.heading}>Название упражнения</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}","import TrainingView from \"./training-view\";\r\n\r\nexport default TrainingView;\r\n","import TrainingCompletedListItem from './training-completed-list-item';\r\n\r\nexport default TrainingCompletedListItem;","/*import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Settings';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    marginBottom: 30,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    width: 'auto',\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    paddingTop: '-20px',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function TrainingCompletedListItem({trainings}) {\r\n  const classes = useStyles();\r\n\r\n  const elements = trainings.map(({dateTime}) => {\r\n    return(\r\n      <Grid item xs={12} sm={6} md={4} lg={3} xl={2} >\r\n        <Card className={classes.card}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/young-man-tired-after-training-showing-his-royalty-free-image-867351234-1555686029.jpg\"\r\n            title=\"Paella dish\"\r\n          />\r\n          <CardHeader\r\n            Trenirowka\r\n          />\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {dateTime}\r\n          </Typography>\r\n          <CardActions disableSpacing>\r\n            <IconButton aria-label=\"Посмотреть\">\r\n              <RemoveRedEyeIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Изменить\">\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Удалить\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    )}\r\n  );\r\n  return(\r\n    <div className=\"btn-group\">\r\n      { elements }\r\n    </div>)\r\n}*/\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function TrainingCompletedListItem({completedTrainings}) {\r\n  const elements = completedTrainings.map(({dateTime}) => {\r\n    const date = moment(dateTime).format(\"YYYY-MM-DD HH:mm\");\r\n    return (\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          {date}\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Название тренировки\"/>\r\n      </ListItem>\r\n    )}\r\n  );\r\n  return(\r\n    <div>\r\n      { elements }\r\n    </div>\r\n  )\r\n}\r\n","/*import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TrainingCompletedListItem from \"../training-completed-list-item\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '100%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  textareaAutosize: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    marginBottom: 10,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n}));\r\n\r\nexport default function TrainingCompletedList({trainings}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon/>}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>Упражнения и отдых</Typography>\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <Grid item xs={12}>\r\n            <TrainingCompletedListItem trainings={trainings}/>\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n    </div>\r\n  );\r\n}*/\r\n\r\nimport React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TrainingCompletedListItem from \"../training-completed-list-item\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function TrainingCompletedList({completedTrainings}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12} md={6} lg={4} xl={3} >\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        subheader={\r\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n            История тренировок\r\n          </ListSubheader>\r\n        }\r\n        className={classes.root}\r\n      >\r\n        <TrainingCompletedListItem completedTrainings={completedTrainings}/>\r\n      </List>\r\n    </Grid>\r\n  );\r\n}","import TrainingCompletedList from './training-completed-list';\r\n\r\nexport default TrainingCompletedList;","export const SAVE_COMPLETED_TRAINING = 'SAVE_COMPLETED_TRAINING';\r\nexport const SAVE_COMPLETED_TRAINING_SUCCESS = 'SAVE_COMPLETED_TRAINING_SUCCESS';\r\nexport const SAVE_COMPLETED_TRAINING_FAILURE = 'SAVE_COMPLETED_TRAINING_FAILURE';\r\nexport const FETCH__COMPLETED_TRAININGS = 'FETCH__COMPLETED_TRAININGS';\r\nexport const COMPLETED_TRAININGS_SUCCESS = 'COMPLETED_TRAININGS_SUCCESS';\r\nexport const COMPLETED_TRAININGS_FAILURE = 'COMPLETED_TRAININGS_FAILURE';\r\n\r\nexport const fetchCompletedTrainings = () => ({\r\n  type: FETCH__COMPLETED_TRAININGS,\r\n});\r\n\r\nexport const fetchCompletedTrainingsSuccess = (trainings) => ({\r\n  type: COMPLETED_TRAININGS_SUCCESS,\r\n  payload: trainings\r\n});\r\n\r\nexport const fetchCompletedTrainingsFailure = (message) => ({\r\n  type: COMPLETED_TRAININGS_FAILURE,\r\n  payload: message\r\n});\r\n\r\nexport const saveCompletedTraining = (exercises) => ({\r\n  type: SAVE_COMPLETED_TRAINING,\r\n  payload:{\r\n    exercises: exercises\r\n  }\r\n});\r\n\r\nexport const saveCompletedTrainingSuccess = (training) => ({\r\n  type: SAVE_COMPLETED_TRAINING_SUCCESS,\r\n  payload:{\r\n    training: training\r\n  }\r\n});\r\n\r\nexport const saveCompletedTrainingFailure = (message) => ({\r\n  type: SAVE_COMPLETED_TRAINING_FAILURE,\r\n  payload:{\r\n    message: message\r\n  }\r\n});\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TrainingCompletedList from \"../../components/training-completed/training-completed-list\";\r\nimport {fetchCompletedTrainings} from '../../actions/completed-trainings'\r\n\r\n\r\nclass TrainingsCompletedContainer extends Component{\r\n\r\n  componentDidMount() {\r\n    const {fetchCompletedTrainings} = this.props;\r\n    fetchCompletedTrainings();\r\n  }\r\n\r\n  render() {\r\n\r\n    const {completedTrainings} = this.props;\r\n\r\n    return(\r\n      <div>\r\n        <TrainingCompletedList completedTrainings={completedTrainings}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    completedTrainings: state.completedTrainings.data\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCompletedTrainings: () => {\r\n      dispatch(fetchCompletedTrainings())\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(TrainingsCompletedContainer);\r\n","import TrainingsCompletedContainer from './trainings-completed-container';\r\n\r\nexport default TrainingsCompletedContainer;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction MadeWithLove() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      Ебашь чёрт пока живой\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Авторизация\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email или логин\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Пароль\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Запомнить?\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Войти\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Забыли пароль?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Создать аккаунт\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <MadeWithLove />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, {useState} from 'react'\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport clsx from \"clsx\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n  btnApproach: {\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst AddApproach = ({addApproach, exerciseId}) => {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    const {name, value} = e.target;\r\n    setValues({...values, [name]: value})\r\n  };\r\n\r\n\r\n  const addItem = () => {\r\n    const {weight, repetition, relaxation} = values;\r\n\r\n    if (!weight || !repetition || !relaxation) return;\r\n\r\n    console.log(values);\r\n    save(values);\r\n    setOpen(false);\r\n  };\r\n\r\n  const [values, setValues] = useState({weight: 0, repetition: 0, relaxation: 0});\r\n\r\n  function save(values) {\r\n    addApproach({\r\n      exerciseId: exerciseId,\r\n      weight: values.weight,\r\n      repetition: values.repetition,\r\n      relaxation: values.relaxation\r\n    });\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={handleClickOpen}>\r\n        Добавить подход\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Детали подхода</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Используемый вес подходе\"\r\n            id=\"simple-start-adornment\"\r\n            type=\"number\"\r\n            name=\"weight\"\r\n            variant=\"outlined\"\r\n            onChange={handleInputChange}\r\n            className={clsx(classes.margin, classes.textField)}\r\n            value={values.weight}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position=\"end\">Кг</InputAdornment>,\r\n            }}\r\n          />\r\n          <br/>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"simple-start-adornment\"\r\n            label=\"Количество повторений\"\r\n            type=\"number\"\r\n            name=\"repetition\"\r\n            value={values.repetition}\r\n            variant=\"outlined\"\r\n            onChange={handleInputChange}\r\n            className={clsx(classes.margin, classes.textField)}\r\n          /> <br/><br/><br/>\r\n          <TextField\r\n            label=\"Отдых после подхода\"\r\n            id=\"simple-start-adornment\"\r\n            type=\"number\"\r\n            name=\"relaxation\"\r\n            value={values.relaxation}\r\n            variant=\"outlined\"\r\n            onChange={handleInputChange}\r\n            className={clsx(classes.margin, classes.textField)}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position=\"end\">Сек</InputAdornment>,\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={addItem} color=\"primary\">\r\n            Добавить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AddApproach;\r\n","import AddApproach from \"./add-approach\";\r\n\r\nexport default AddApproach;\r\n","import React, {useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddApproach from \"../add-approach\";\r\nimport ApproachesList from \"../approaches-list\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    marginBottom: 30,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    width: 'auto',\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    paddingTop: '-20px',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst ExercisesListItem = ({exercise, addApproach, editExercise}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleInputChange = e => {\r\n    const {name, value} = e.target;\r\n    editExercise({\r\n      ...exercise,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon/>}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography className={classes.heading}>\r\n          {exercise.title}\r\n        </Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Название упражнения\"\r\n            className={classes.textField}\r\n            type=\"text\"\r\n            name=\"title\"\r\n            autoComplete=\"number\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n          />\r\n          <AddApproach addApproach={addApproach} exerciseId={exercise.id}/>\r\n          <ApproachesList approaches={exercise.approaches}/>\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Время отдыха после тренировки\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            name=\"relaxation\"\r\n            autoComplete=\"number\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n};\r\n\r\nexport default ExercisesListItem;\r\n","import ExercisesListItem from \"./exercises-list-item\";\r\n\r\nexport default ExercisesListItem;\r\n","import ExercisesList from \"./exercises-list\";\r\n\r\nexport default ExercisesList;\r\n","import React from \"react\";\r\nimport ExercisesListItem from \"../exercises-list-item\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst ExercisesList = ({exercises, addApproach, addExercise, saveTraining, editExercise}) => {\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n        <button onClick={addExercise}>Добавить упражнение</button>\r\n        {exercises.map((exercise) => {\r\n          return (\r\n            <ExercisesListItem exercise={exercise}\r\n                               addApproach={addApproach}\r\n                               editExercise={editExercise}/>\r\n          )\r\n        })}\r\n      </Grid>\r\n      <button onClick={saveTraining}>\r\n        Сохранить тренировку\r\n      </button>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ExercisesList;\r\n","export const ADD_EXERCISE = 'ADD_EXERCISE';\r\nexport const ADD_APPROACH = 'ADD_APPROACH';\r\nexport const EDIT_EXERCISE = 'EDIT_EXERCISE';\r\nexport const FINISH_TRAINING = 'FINISH_TRAINING';\r\n\r\nexport const addExercise = (title) => ({\r\n  type: ADD_EXERCISE,\r\n  payload: {\r\n    title: title,\r\n    approaches: []\r\n  }\r\n});\r\n\r\nexport const addApproach = (approach) => ({\r\n  type: ADD_APPROACH,\r\n  payload: {\r\n    exerciseId: approach.exerciseId,\r\n    weight: approach.weight,\r\n    repetition: approach.repetition,\r\n    relaxation: approach.relaxation\r\n  }\r\n});\r\n\r\nexport const editExercise = (exercise) => ({\r\n  type: EDIT_EXERCISE,\r\n  payload: {\r\n    exercise: {\r\n      id: exercise.id,\r\n      title: exercise.title,\r\n      relaxation: exercise.relaxation\r\n    }\r\n  }\r\n});\r\n\r\nexport const finishTraining = () => ({\r\n  type: FINISH_TRAINING\r\n});\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ExercisesList from \"../../components/training-in-process/exercises-list\";\r\nimport {addApproach, addExercise, editExercise} from \"../../actions/training-in-process\";\r\nimport {saveCompletedTraining} from \"../../actions/completed-trainings\";\r\n\r\nclass TrainingInProcessContainer extends Component {\r\n\r\n  render() {\r\n    const {\r\n      addApproach,\r\n      addExercise,\r\n      exercises,\r\n      saveTraining,\r\n      editExercise} = this.props;\r\n\r\n    const save = () => {\r\n      saveTraining(exercises)\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <ExercisesList exercises={exercises}\r\n                       addApproach={addApproach}\r\n                       addExercise={addExercise}\r\n                       editExercise={editExercise}\r\n                       saveTraining={save}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exercises: state.trainingInProcess.exercises\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addApproach: (approach) => {\r\n      dispatch(addApproach(approach))\r\n    },\r\n    addExercise: () => {\r\n      dispatch(addExercise('Новое упражнение'))\r\n    },\r\n    saveTraining: (exercises) => {\r\n      dispatch(saveCompletedTraining(exercises))\r\n    },\r\n    editExercise: (exercise) => {\r\n      dispatch(editExercise(exercise))\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(TrainingInProcessContainer);\r\n","import TrainingInProcessContainer from './training-in-process-container';\r\n\r\nexport default TrainingInProcessContainer;","import React from 'react';\r\nimport TestLayout from './components/statistics/training-view';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport TrainingsCompletedContainer from \"./containers/trainings-completed\"\r\nimport SignIn from \"./components/legacy/layout/material/sing-in\"\r\nimport TrainingInProcessContainer from \"./containers/training-in-process\"\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: 60,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid container xs={12} justify={'center'} className={classes.root}>\r\n        <Switch>\r\n          <Route exact path=\"/\"\r\n                 component={TrainingInProcessContainer}/>\r\n          <Route path=\"/trainingsCompleted\"\r\n                 component={TrainingsCompletedContainer}/>\r\n          <Route exact path=\"/test\"\r\n                 component={TestLayout}/>\r\n        </Switch>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#DA477D',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","export const FETCH_EXERCISES = 'FETCH_EXERCISES';\r\nexport const FETCH_EXERCISES_SUCCESS = 'FETCH_EXERCISES_SUCCESS';\r\nexport const FETCH_EXERCISES_FAILURE = 'FETCH_EXERCISES_FAILURE';\r\n\r\nexport const fetchExercises = () => ({\r\n  type: FETCH_EXERCISES\r\n});\r\n\r\nexport const fetchExercisesSuccess = (exercises) => ({\r\n  type: FETCH_EXERCISES_SUCCESS,\r\n  payload:{\r\n    exercises: exercises\r\n  }\r\n});\r\n\r\nexport const fetchExercisesFailure = (message) => ({\r\n  type: FETCH_EXERCISES_FAILURE,\r\n  payload:{\r\n    message: message\r\n  }\r\n});\r\n","import {FETCH_EXERCISES, FETCH_EXERCISES_FAILURE, FETCH_EXERCISES_SUCCESS} from \"../actions/exercises\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nfunction exercisesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_EXERCISES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_EXERCISES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.exercises\r\n      };\r\n\r\n    case FETCH_EXERCISES_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default exercisesReducer;\r\n","export const FETCH_TRAININGS = 'FETCH_TRAININGS';\r\nexport const FETCH_TRAININGS_SUCCESS = 'FETCH_TRAININGS_SUCCESS';\r\nexport const FETCH_TRAININGS_FAILURE = 'FETCH_TRAININGS_FAILURE';\r\nexport const TRAINING_CREATE = 'TRAINING_CREATE';\r\nexport const TRAINING_CREATE_SUCCESS = 'TRAINING_CREATE_SUCCESS';\r\nexport const TRAINING_CREATE_FAILURE = 'TRAINING_CREATE_FAILURE';\r\n\r\nexport const fetchTrainings = () => ({\r\n  type: FETCH_TRAININGS\r\n});\r\n\r\nexport const fetchTrainingsSuccess = (trainings) => ({\r\n  type: FETCH_TRAININGS_SUCCESS,\r\n  payload:{\r\n    trainings: trainings\r\n  }\r\n});\r\n\r\nexport const fetchTrainingsFailure = (message) => ({\r\n  type: FETCH_TRAININGS_FAILURE,\r\n  payload:{\r\n    message: message\r\n  }\r\n});\r\n\r\nexport const trainingCreate = (title, image, description, authorId) => {\r\n  return {\r\n    type: TRAINING_CREATE,\r\n    payload: {\r\n      title: title,\r\n      image: image,\r\n      description: description,\r\n      authorId: authorId\r\n    }\r\n  }\r\n};\r\n\r\nexport const trainingCreateSuccess = (trainings) => ({\r\n  type: TRAINING_CREATE_SUCCESS,\r\n  payload: trainings\r\n});\r\n\r\nexport const trainingCreateFailure = (message) => ({\r\n  type: TRAINING_CREATE_FAILURE,\r\n  payload: message\r\n});","import {\r\n  FETCH_TRAININGS,\r\n  FETCH_TRAININGS_FAILURE,\r\n  FETCH_TRAININGS_SUCCESS,\r\n  TRAINING_CREATE,\r\n  TRAINING_CREATE_SUCCESS\r\n} from \"../actions/trainings\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nfunction trainingsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_TRAININGS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_TRAININGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload.trainings\r\n      };\r\n\r\n    case FETCH_TRAININGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.message\r\n      };\r\n\r\n    case TRAINING_CREATE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case TRAINING_CREATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default trainingsReducer;\r\n","import {\r\n  SAVE_COMPLETED_TRAINING,\r\n  SAVE_COMPLETED_TRAINING_FAILURE,\r\n  SAVE_COMPLETED_TRAINING_SUCCESS,\r\n  FETCH__COMPLETED_TRAININGS,\r\n  COMPLETED_TRAININGS_SUCCESS,\r\n  COMPLETED_TRAININGS_FAILURE\r\n} from \"../actions/completed-trainings\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nfunction completedTrainingReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH__COMPLETED_TRAININGS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case COMPLETED_TRAININGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n\r\n    case COMPLETED_TRAININGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case SAVE_COMPLETED_TRAINING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case SAVE_COMPLETED_TRAINING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: [...state.data, action.payload.training]\r\n      };\r\n\r\n    case SAVE_COMPLETED_TRAINING_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default completedTrainingReducer;\r\n","import {ADD_APPROACH, ADD_EXERCISE, EDIT_EXERCISE, FINISH_TRAINING} from \"../actions/training-in-process\";\r\n\r\nconst initialState = {\r\n  exercises: []\r\n};\r\n\r\nfunction trainingInProcessReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_EXERCISE:\r\n      action.payload.id = state.exercises.length;\r\n\r\n      return {\r\n        ...state,\r\n        exercises: [...state.exercises, action.payload]\r\n      };\r\n\r\n    case ADD_APPROACH:\r\n      let item = state.exercises.find(x => x.id === action.payload.exerciseId);\r\n\r\n      action.payload.number = item.approaches.length + 1;\r\n\r\n      item.approaches = [...item.approaches, action.payload];\r\n\r\n      return {\r\n        ...state,\r\n        exercises: [\r\n          ...state.exercises.slice(0, item.id),\r\n          item,\r\n          ...state.exercises.slice(item.id + 1)\r\n        ]\r\n      };\r\n\r\n    case EDIT_EXERCISE:\r\n      let exercise =  state.exercises\r\n        .find(x => x.id === action.payload.exercise.id);\r\n\r\n      return {\r\n        ...state,\r\n        exercises: [\r\n          ...state.exercises.slice(0, exercise.id),\r\n          {\r\n            ...exercise,\r\n            title: action.payload.exercise.title,\r\n            relaxation: action.payload.exercise.relaxation\r\n          },\r\n          ...state.exercises.slice(exercise.id + 1)\r\n        ]\r\n      };\r\n\r\n    case FINISH_TRAINING:\r\n      return {\r\n        ...state,\r\n        exercises: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default trainingInProcessReducer;\r\n","import {combineReducers} from \"redux\";\r\nimport exercisesReducer from \"./exercises-reducer\";\r\nimport trainingsReducer from \"./trainings-reducer\";\r\nimport completedTrainingReducer from \"./completed-training-reducer\";\r\nimport trainingInProcessReducer from \"./training-in-process-reducer\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n  exercises: exercisesReducer,\r\n  trainings: trainingsReducer,\r\n  completedTrainings: completedTrainingReducer,\r\n  trainingInProcess: trainingInProcessReducer\r\n});\r\n\r\nexport default reducer;\r\n","import {ofType} from \"redux-observable\";\r\nimport {FETCH_EXERCISES, fetchExercisesFailure, fetchExercisesSuccess} from \"../actions/exercises\";\r\nimport {switchMap, map} from 'rxjs/operators'\r\nimport {ajax} from \"rxjs/internal/observable/dom/ajax\";\r\n\r\nconst API = 'https://localhost:44329/api/Exercises';\r\n\r\nexport function fetchExercises(action$) {\r\n  return action$.pipe(\r\n    ofType(FETCH_EXERCISES),\r\n    switchMap(() => {\r\n      return ajax\r\n        .getJSON(API).pipe(\r\n          map(data => fetchExercisesSuccess(data))\r\n        )\r\n    })\r\n  )\r\n}\r\n","import {ofType} from \"redux-observable\";\r\nimport {switchMap, map} from 'rxjs/operators'\r\nimport {ajax} from \"rxjs/internal/observable/dom/ajax\";\r\nimport {FETCH_TRAININGS,\r\n        fetchTrainingsSuccess,\r\n        TRAINING_CREATE,\r\n        trainingCreateSuccess} from \"../actions/trainings\";\r\n\r\nconst API = 'https://localhost:44329/api/Trainings';\r\n\r\nexport function fetchTrainings(action$) {\r\n  return action$.pipe(\r\n    ofType(FETCH_TRAININGS),\r\n    switchMap(() => {\r\n      return ajax\r\n        .getJSON(API).pipe(\r\n          map(data => fetchTrainingsSuccess(data))\r\n        )\r\n    })\r\n  )\r\n}\r\n\r\nexport const createTrainingsEpic = (action$) => {\r\n  return action$.pipe(\r\n    ofType(TRAINING_CREATE),\r\n    switchMap((action) => {\r\n      return ajax\r\n        .post(API, action.payload, {'Content-Type': 'application/json'})\r\n        .pipe(\r\n          map(resp => trainingCreateSuccess(resp.response))\r\n        )\r\n    })\r\n  )\r\n};\r\n","import {combineEpics} from \"redux-observable\";\r\nimport {fetchExercises} from \"./exercisesEpics\";\r\nimport {createTrainingsEpic, fetchTrainings} from \"./trainingsEpics\";\r\nimport {fetchCompletedTrainingsEpic, saveCompletedTrainingsEpic, saveCompletedTrainingSuccessEpic} from \"./completedTrainingEpics\";\r\n\r\nexport const rootEpic = combineEpics(\r\n  fetchExercises,\r\n  fetchTrainings,\r\n  fetchCompletedTrainingsEpic,\r\n  createTrainingsEpic,\r\n  saveCompletedTrainingsEpic,\r\n  saveCompletedTrainingSuccessEpic\r\n);\r\n","import {ofType} from \"redux-observable\";\r\nimport {\r\n  fetchCompletedTrainingsSuccess,\r\n  FETCH__COMPLETED_TRAININGS,\r\n  SAVE_COMPLETED_TRAINING,\r\n  SAVE_COMPLETED_TRAINING_SUCCESS,\r\n  saveCompletedTrainingSuccess\r\n} from \"../actions/completed-trainings\";\r\nimport {switchMap, map} from \"rxjs/operators\";\r\nimport {ajax} from \"rxjs/internal/observable/dom/ajax\";\r\nimport {of} from \"rxjs\";\r\nimport {finishTraining} from \"../actions/training-in-process\";\r\n\r\nconst API = 'https://localhost:44329/api/CompletedTrainings';\r\n\r\nexport const fetchCompletedTrainingsEpic = (action$) => {\r\n  return action$.pipe(\r\n    ofType(FETCH__COMPLETED_TRAININGS),\r\n    switchMap(() => {\r\n      return ajax\r\n        .getJSON(API).pipe(\r\n          map(data => fetchCompletedTrainingsSuccess(data))\r\n        )\r\n    })\r\n  )\r\n};\r\n\r\nexport const saveCompletedTrainingsEpic = (action$) => {\r\n  return action$.pipe(\r\n    ofType(SAVE_COMPLETED_TRAINING),\r\n    switchMap((action) => {\r\n      return ajax\r\n        .post(\r\n          API,\r\n          {\r\n            exercises: action.payload.exercises,\r\n            userId: 0,\r\n            date: new Date()\r\n          },\r\n          {'Content-Type': 'application/json'})\r\n        .pipe(\r\n          map(resp => saveCompletedTrainingSuccess(resp.response))\r\n        )\r\n    })\r\n  )\r\n};\r\n\r\nexport const saveCompletedTrainingSuccessEpic = (action$) => {\r\n  return action$.pipe(\r\n    ofType(SAVE_COMPLETED_TRAINING_SUCCESS),\r\n    switchMap(() => {\r\n      return of(finishTraining());\r\n    })\r\n  )\r\n};\r\n","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport {createEpicMiddleware} from \"redux-observable\";\r\nimport {rootEpic} from \"./epics\";\r\n\r\nconst configureStore = () => {\r\n\r\n  const epicMiddleware = createEpicMiddleware();\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const store = createStore(reducer, composeEnhancers(\r\n    applyMiddleware(epicMiddleware)\r\n  ));\r\n\r\n  epicMiddleware.run(rootEpic);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport App from './App';\r\nimport theme from './theme';\r\nimport store from './store';\r\nimport {Provider} from \"react-redux\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store()}>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Router>\r\n      <App />\r\n      </Router>\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}